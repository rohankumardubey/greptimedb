searchState.loadedDescShard("common_event_recorder", 0, "Contains the error value\nSNAFU context selector for the <code>Error::MismatchedSchema</code> …\nSNAFU context selector for the <code>Error::NoAvailableFrontend</code> …\nContains the success value\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe default table name for storing the events.\nThe time interval for flushing batched events to the event …\nThe column name for the event payload.\nThe column name for the event timestamp.\nThe column name for the event type.\nEvent trait defines the interface for events that can be …\nEventHandler trait defines the interface for how to handle …\nEventRecorder trait defines the interface for recording …\nImplementation of EventRecorder that records the events …\nConfiguration options for the event recorder.\nEventRecorderRef is the reference to the event recorder.\nReturns the event as any type.\nBuilds the row inserts request for the events that will be …\nCancels the event recorder.\nReturns the type of the event.\nAdd the extra row to the event with the default row.\nAdd the extra schema to the event with the default schema.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nProcesses and handles incoming events. The […\nReturns the hints for the insert operation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the JSON bytes of the event as the payload. It …\nRecords an event for persistence and processing by …\nReturns the timestamp of the event. Default to the current …\nTTL for the events table that will be used to store the …")